// function getLength(array) {
//   // Преобразуем массив в строку без разделителей
//   let str = array.join("");

//   // Возвращаем длину полученной строки
//   return str.length;
// }

// // Примеры вызова функции
// console.log(getLength(["Mango", "hurries", "to", "the", "train"])); // Выводит 22
// console.log(getLength(["M", "a", "n", "g", "o"])); // Выводит 5
// console.log(getLength(["top", "picks", "for", "you"])); // Выводит 14

// Конечно, вот несколько задач,
//     где важно выбирать подходящие имена переменных:

//     Задача: Калькулятор бензина

//     Напишите программу, которая
//      вычисляет стоимость поездки
//      на автомобиле.Пользователь вводит расход
// топлива(литры на 100 км), расстояние поездки(в километрах)
//  и цену бензина(за литр).
//  Программа выводит общую стоимость поездки.

// Задача: Сортировка чисел

// Напишите программу, которая сортирует массив чисел в порядке возрастания.
//  Пользователь вводит числа через запятую.Программа выводит отсортированный массив.

// Задача: Расчет среднего возраста

// Напишите программу, которая запрашивает у пользователя возраст
// нескольких людей и затем вычисляет и выводит средний возраст.

// Задача: Управление задачами

// Напишите программу для управления задачами.
//  Каждая задача имеет название и статус(выполнена или не выполнена).
//  Пользователь может добавлять новые задачи,
// отмечать задачи как выполненные и просматривать список задач.

//     Задача: Прогноз погоды

//     Напишите программу, которая получает от пользователя текущую
//      температуру в градусах Цельсия и выводит прогноз
// погоды(например, "жарко", "прохладно", "холодно") на основе следующих правил:
//         Если температура больше 30 градусов, то "жарко".
//         Если температура от 20 до 30 градусов включительно, то "прохладно".
//         Если температура меньше 20 градусов, то "холодно".

// Попробуйте решить эти задачи, придумывая подходящие имена переменным,
//     чтобы код был более читаемым и понятным.Если у вас будут вопросы
//      по решению или вы хотите обсудить свои варианты, не стесняйтесь спрашивать!

// Сервісу гравірування прикрас потрібна функція,
//     яка б автоматично рахувала ціну гравірування,
//         залежно від кількості слів і ціни за слово.

// Оголошена функція calculateEngravingPrice(message, pricePerWord).
//  Ця функція приймає першим параметром рядок, що складається зі слів,
//     розділених лише пробілами(параметр message) та другим
// параметром - число, що містить ціну гравірування за одне
// слово(параметр pricePerWord).

// Доповни тіло функції так, щоб вона повертала загальну
//  вартість гравірування усіх слів в рядку.

// Оголошена функція calculateEngravingPrice(message, pricePerWord)
// Виклик calculateEngravingPrice("JavaScript is in my blood", 10) повертає 50
// Виклик calculateEngravingPrice("JavaScript is in my blood", 20) повертає 100
// Виклик calculateEngravingPrice("Web-development is creative work", 40) повертає 160
// Виклик calculateEngravingPrice("Web-development is creative work", 20) повертає 80

// function calculateEngravingPrice(message, pricePerWord) {}

// function calculateEngravingPrice(message, pricePerWord) {
//   // Розбиваємо рядок на слова та обчислюємо кількість слів
//   const words = message.split("");
//   const wordCount = words.length;

//   // Розраховуємо загальну вартість гравірування
//   const totalPrice = wordCount * pricePerWord;

//   // Повертаємо результат
//   return totalPrice;
// }

// // Приклад використання:
// const message = "Привіт світ"; // Рядок для гравірування
// const pricePerWord = 10; // Ціна за слово

// const engravingPrice = calculateEngravingPrice(message, pricePerWord);
// console.log(engravingPrice); // Виведе 30

// Звісно! Ось кілька коротших задач для практики:

//     Напишіть функцію reverseString, яка приймає рядок і повертає його в зворотньому порядку.

//     Напишіть функцію isPalindrome, яка приймає рядок і повертає true, якщо рядок є паліндромом (читається однаково зліва направо та справа наліво), і false в іншому випадку.

//     Напишіть функцію findMaxValue, яка приймає масив чисел і повертає найбільше число в масиві.

//     Напишіть функцію capitalizeWords, яка приймає рядок і повертає рядок, в якому перше слово кожного слова написано з великої літери.

//     Напишіть функцію filterOdds, яка приймає масив чисел і повертає новий масив, що містить лише парні числа.

// Спробуйте вирішити ці задачі і перевірте свої відповіді. Якщо у вас виникнуть питання або ви хочете порівняти свої відповіді, я готовий допомогти!

// Конечно, я рад помочь! Вот несколько задач на тему работы с массивами для закрепления:

// 1. Напиши функцию getMaxValue, которая принимает массив чисел и возвращает наибольшее значение из них.

// function getMaxValue(Number) {
//     let value = Number

// }

// 2. Напиши функцию getAverage, которая принимает массив чисел и возвращает среднее арифметическое значение.

// 3. Напиши функцию reverseArray, которая принимает массив и возвращает его в обратном порядке.

// 4. Напиши функцию filterEvenNumbers, которая принимает массив чисел и возвращает новый массив, содержащий только четные числа.

// 5. Напиши функцию findIndex, которая принимает массив и значение, и возвращает индекс первого вхождения этого значения в массиве. Если значение не найдено, функция должна вернуть -1.

// 6. Напиши функцию removeDuplicates, которая принимает массив и возвращает новый массив, в котором удалены все повторяющиеся элементы.

// const apartment = {
//   imgUrl: "https://via.placeholder.com/640x480",
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
//   tags: ["premium", "promoted", "top"],
//   owner: {
//     name: "Henry",
//     phone: "982-126-1588",
//     email: "henry.carter@aptmail.com",
//   },
// };
// apartment.price = 5000;
// apartment.rating = 4.7;
// apartment.owner.name = "Henry Sibola";
// apartment.tags.push("trusted");

// console.log(apartment.price);
// console.log(apartment.rating);
// console.log(apartment.owner.name);
// console.log(apartment.tags.push);
// ======================================
// Ці задачі допоможуть вам закріпити розуміння методів
//  та операцій з об'єктами в JavaScript

//  =========================================
// Задача 1: Доступ до значень

// Створіть об'єкт user з інформацією про користувача
//     (ім'я, вік, мова програмування, електронна пошта).
//      Використовуючи методи об'єкту, виведіть ім'я
//       та електронну пошту користувача.

// const user = {
//   name: "John",
//   age: 25,
//   programmingLanguage: "JavaScript",
//   email: "john@example.com",
// };

// console.log(user.name); // John
// console.log(user.email); // john@example.com

// =======================================
// Задача 2: Додавання та видалення властивостей

// Додайте нову властивість до об'єкту user,
// наприклад, isAdmin, і видаліть властивість age.

// user.isAdmin = true;
// delete user.age;

// console.log(user);

// ====================================
// Задача 3: Ітерація по властивостях

// Створіть об'єкт car з властивостями
//  про автомобіль(марка, модель, рік випуску).
//  Виведіть всі ключі об'єкту та їх значення,
//   використовуючи цикл for...in.

//   const car = {
//   brand: 'Toyota',
//   model: 'Camry',
//   year: 2022,
// };

// for (const key in car) {
//   console.log(`${key}: ${car[key]}`);
// }

// ======================================
// Задача 4: Перевірка існування властивості

// Напишіть функцію hasProperty(obj, prop),
//     яка перевіряє, чи існує властивість
//      з ім'ям prop в об'єкті obj.

//      function hasProperty(obj, prop) {
//   return prop in obj;
// }

// const sampleObject = { name: 'John', age: 30 };
// console.log(hasProperty(sampleObject, 'name')); // true
// console.log(hasProperty(sampleObject, 'gender')); // false
// =======================================
// function add(...args) {
//   return args.reduce((sum, current) => sum + current, 0);
// }

// // Приклад використання:
// console.log(add(1, 2, 3)); // 6
// console.log(add(5, 10, 15, 20)); // 50
// console.log(add(2)); // 2
// console.log(add()); // 0
// =======================================
